import { createApi, fetchBaseQuery } from "@reduxjs/toolkit/query/react";
import { apiConfigs } from "../services/apiConfigs";

// Initialize an empty object to store the API services
const apiServices = {};

// Initialize an empty object to store autogenerated hooks
const apiHooks = {};

// Loop through each API configuration and create the corresponding API service
apiConfigs.forEach(({ name, baseUrl, endpoints, auth, tagTypes }) => {
  const apiService = createApi({
    reducerPath: name,
    baseQuery: auth
      ? fetchBaseQuery({
          baseUrl,
          prepareHeaders: (headers, { getState }) => {
            // By default, if we have a token in the store, let's use that for authenticated requests
            const token = getState().auth.token;
            if (token) {
              headers.set("authorization", `Bearer ${token}`);
            }
            return headers;
          },
        })
      : fetchBaseQuery({ baseUrl }),
    tagTypes,
    endpoints,
  });

  // Store the API service in the apiServices object
  apiServices[name] = apiService;

  // Store autogenerated hooks in the apiHooks object
  Object.keys(apiService).forEach((key) => {
    if (key.startsWith("use")) {
      apiHooks[key] = apiService[key];
    }
  });
});

// console.log(apiHooks, "hooks");
// console.log(apiServices, "services");

// Export the API services and autogenerated hooks
export { apiServices, apiHooks };
